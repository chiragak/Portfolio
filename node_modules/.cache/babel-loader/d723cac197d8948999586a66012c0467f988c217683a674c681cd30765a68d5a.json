{"ast":null,"code":"function n(n, t) {\n  return function (n) {\n    if (Array.isArray(n)) return n;\n  }(n) || function (n, t) {\n    var r = [],\n      e = !0,\n      u = !1,\n      o = void 0;\n    try {\n      for (var i, c = n[Symbol.iterator](); !(e = (i = c.next()).done) && (r.push(i.value), !t || r.length !== t); e = !0);\n    } catch (n) {\n      u = !0, o = n;\n    } finally {\n      try {\n        e || null == c.return || c.return();\n      } finally {\n        if (u) throw o;\n      }\n    }\n    return r;\n  }(n, t) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }();\n}\nfunction t(n, t, r, o = 0) {\n  const i = e(n, t, r),\n    c = i - u(n, t, r);\n  if (c) {\n    const e = i === n ? (t - r) / c : i === t ? (r - n) / c : (n - t) / c;\n    return 60 * (e + (i === n ? e < 0 ? 6 : 0 : i === t ? 2 : 4));\n  }\n  return o;\n}\nfunction r(n, t, r) {\n  const e = r < 0 ? r + 360 : r > 360 ? r - 360 : r;\n  return 6 * e < 360 ? n + (t - n) * e / 60 : 2 * e < 360 ? t : 3 * e < 720 ? n + (t - n) * (240 - e) / 60 : n;\n}\nfunction e(n, t, r) {\n  return v(n, t, r);\n}\nfunction u(n, t, r) {\n  return M(n, t, r);\n}\nfunction o(n, t) {\n  return t.map(t => t.reduce((t, r, e) => t + n[e] * i * (r * i) / i / i, 0));\n}\nconst i = 1e8,\n  c = 96.42,\n  a = 100,\n  l = 82.49,\n  s = (n, t) => g(p(n, t)),\n  f = n => b(d(n)),\n  d = n => n * q / 180,\n  g = n => 180 * n / q,\n  h = n => x(d(n)),\n  m = Math.abs,\n  p = Math.atan2,\n  y = Math.cbrt,\n  b = Math.cos,\n  k = Math.exp,\n  w = Math.floor,\n  v = Math.max,\n  M = Math.min,\n  q = Math.PI,\n  I = Math.pow,\n  x = Math.sin,\n  S = Math.sqrt,\n  A = I(6, 3) / I(29, 3),\n  $ = I(29, 3) / I(3, 3);\nfunction j(n, r, o, i) {\n  const c = t(n, r, o, i),\n    a = e(n, r, o),\n    l = u(n, r, o),\n    s = a - l,\n    f = (a + l) / 2;\n  return [c, 0 === s ? 0 : s / (100 - m(2 * f - 100)) * 100, f];\n}\nfunction z(n, t, e) {\n  const u = e <= 50 ? e * (t + 100) / 100 : e + t - e * t / 100,\n    o = 2 * e - u,\n    i = [r(o, u, n + 120), r(o, u, n), r(o, u, n - 120)];\n  return [i[0], i[1], i[2]];\n}\nfunction C(n, r, o, i) {\n  return [t(n, r, o, i), u(n, r, o), 100 - e(n, r, o)];\n}\nfunction E(t, r, e, u) {\n  const o = n(z(t, 100, 50).map(n => n * (100 - r - e) / 100 + r), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction L(n, r, o, i) {\n  const c = e(n, r, o),\n    a = u(n, r, o);\n  return [t(n, r, o, i), c === a ? 0 : (c - a) / c * 100, c];\n}\nfunction P(t, r, e) {\n  const u = w(t / 60),\n    o = e * (100 - r) / 100,\n    i = e * (100 - r * (t / 60 - u & 1 ? t / 60 - u : 1 - t / 60 - u)) / 100,\n    c = n(5 === u ? [e, o, i] : 4 === u ? [i, o, e] : 3 === u ? [o, i, e] : 2 === u ? [o, e, i] : 1 === u ? [i, e, o] : [e, i, o], 3);\n  return [c[0], c[1], c[2]];\n}\nfunction T(t, r, e) {\n  const u = n([t, r, e].map(n => n > 4.045 ? 100 * I((n + 5.5) / 105.5, 2.4) : n / 12.92), 3),\n    i = n(o([u[0], u[1], u[2]], [[.4124564, .3575761, .1804375], [.2126729, .7151522, .072175], [.0193339, .119192, .9503041]]), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction B(t, r, e) {\n  const u = n(o([t, r, e], [[3.2404542, -1.5371385, -.4985314], [-.969266, 1.8760108, .041556], [.0556434, -.2040259, 1.0572252]]), 3),\n    i = n([u[0], u[1], u[2]].map(n => n > .31308 ? 1.055 * I(n / 100, 1 / 2.4) * 100 - 5.5 : 12.92 * n), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction D(n, t, r) {\n  const e = t * (r < 50 ? r : 100 - r) / 100;\n  return [n, 0 === e ? 0 : 2 * e / (r + e) * 100, r + e];\n}\nfunction F(n, t, r) {\n  const e = (200 - t) * r / 100;\n  return [n, 0 === e || 200 === e ? 0 : t * r / 100 / (e <= 100 ? e : 200 - e) * 100, 5 * e / 10];\n}\nfunction G(n, t, r) {\n  return [n, 100 === r ? 0 : 100 - t / (100 - r) * 100, 100 - r];\n}\nfunction H(n, t, r) {\n  return [n, (100 - t) * r / 100, 100 - r];\n}\nfunction J(t, r, e) {\n  const u = (t + 16) / 116,\n    i = r / 500 + u,\n    s = u - e / 200,\n    f = I(i, 3) > A ? I(i, 3) : (116 * i - 16) / $,\n    d = t > $ * A ? I((t + 16) / 116, 3) : t / $,\n    g = I(s, 3) > A ? I(s, 3) : (116 * s - 16) / $,\n    h = n(o([f * c, d * a, g * l], [[.9555766, -.0230393, .0631636], [-.0282895, 1.0099416, .0210077], [.0122982, -.020483, 1.3299098]]), 3);\n  return [h[0], h[1], h[2]];\n}\nfunction K(t, r, e) {\n  const u = n(o([t, r, e], [[1.0478112, .0228866, -.050127], [.0295424, .9904844, -.0170491], [-.0092345, .0150436, .7521316]]), 3),\n    i = u[0],\n    s = u[1],\n    f = u[2],\n    d = n([i / c, s / a, f / l].map(n => n > A ? y(n) : ($ * n + 16) / 116), 3),\n    g = d[0],\n    h = d[1];\n  return [116 * h - 16, 500 * (g - h), 200 * (h - d[2])];\n}\nfunction N(n, t, r) {\n  const e = [S(I(t, 2) + I(r, 2)), g(p(r, t))];\n  return [n, e[0], e[1]];\n}\nfunction O(n, t, r) {\n  return [n, t * f(r), t * h(r)];\n}\nfunction Q(n, t) {\n  return function (n, t) {\n    const r = v(n, t),\n      e = M(n, t);\n    return (r * i + .05 * i) / (e * i + .05 * i);\n  }(R(...n), R(...t));\n}\nfunction R(n, t, r) {\n  return (U(n) * X + U(t) * Y + U(r) * Z) / i;\n}\nconst U = n => n <= 3.928 ? n / W : V(n),\n  V = n => I((n + 5.5) / 105.5, 2.4),\n  W = 1292,\n  X = .2126 * i,\n  Y = .7152 * i,\n  Z = .0722 * i;\nfunction _(t) {\n  const r = n(t.match(tn) || [], 9),\n    e = r[1],\n    u = r[2],\n    o = r[3],\n    i = r[4],\n    c = r[5],\n    a = r[6],\n    l = r[7],\n    s = r[8];\n  if (void 0 !== c || void 0 !== e) {\n    return [void 0 !== c ? parseInt(c, 16) : parseInt(e + e, 16), void 0 !== a ? parseInt(a, 16) : parseInt(u + u, 16), void 0 !== l ? parseInt(l, 16) : parseInt(o + o, 16), void 0 !== s ? parseInt(s, 16) : void 0 !== i ? parseInt(i + i, 16) : 255].map(n => 100 * n / 255);\n  }\n}\nfunction nn(n, t, r) {\n  return `#${((1 << 24) + (Math.round(255 * n / 100) << 16) + (Math.round(255 * t / 100) << 8) + Math.round(255 * r / 100)).toString(16).slice(1)}`;\n}\nconst tn = /^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;\nfunction rn(n) {\n  const t = en[String(n).toLowerCase()];\n  return t ? t.map(n => 100 * n / 255) : null;\n}\nconst en = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  transparent: [0, 0, 0],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nfunction un([n, t, r], [e, u, o]) {\n  const c = S(I(t, 2) + I(r, 2)),\n    a = S(I(u, 2) + I(o, 2)),\n    l = e - n,\n    d = (n + e) / 2,\n    g = I((c + a) / 2, 7),\n    p = S(g / (g + I(25, 7))),\n    y = t + t / 2 * (1 - p),\n    b = u + u / 2 * (1 - p),\n    w = S(y * y + r * r),\n    v = S(b * b + o * o),\n    M = (w + v) / 2,\n    q = v - w,\n    x = 0 === y && 0 === r ? 0 : s(r, y) % 360,\n    A = 0 === b && 0 === o ? 0 : s(o, b) % 360;\n  let $, j, z;\n  0 === w || 0 === v ? ($ = 0, j = 0, z = x + A) : ($ = m(x - A) <= 180 ? A - x : A <= x ? A - x + 360 : A - x - 360, j = 2 * S(w * v) * h($ / 2), z = m(x - A) <= 180 ? (x + A) / 2 : x + A < 360 ? (x + A + 360) / 2 : (x + A - 360) / 2);\n  const C = 1 - .17 * i * f(z - 30) + .24 * i * f(2 * z) + .32 * i * f(3 * z + 6) - .2 * i * f(4 * z - 63) / i / i,\n    E = (d - 50) * (d - 50),\n    L = 1 + .015 * i * E / S(20 + E) / i,\n    P = 1 + .045 * i * M / i,\n    T = 1 + .015 * i * M * C / i,\n    B = 60 * k(-(z - 275) / 25 * ((z - 275) / 25)),\n    D = -2 * p * h(B),\n    F = l / (on * L),\n    G = q / (cn * P),\n    H = j / (an * T);\n  return S(F * F + G * G + H * H + D * G * H);\n}\nconst on = 1,\n  cn = 1,\n  an = 1;\nfunction ln(t, r, e) {\n  const u = n(T(t, r, e), 3),\n    o = n(K(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction sn(t, r, e) {\n  const u = n(J(t, r, e), 3),\n    o = n(B(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction fn(t, r, e) {\n  const u = n(T(t, r, e), 3),\n    o = n(K(u[0], u[1], u[2]), 3),\n    i = n(N(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction dn(t, r, e) {\n  const u = n(O(t, r, e), 3),\n    o = n(J(u[0], u[1], u[2]), 3),\n    i = n(B(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction gn(t, r, e) {\n  const u = n(G(t, r, e), 3),\n    o = n(F(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction hn(t, r, e) {\n  const u = n(D(t, r, e), 3),\n    o = n(H(t, u[1], u[2]), 3);\n  return [t, o[1], o[2]];\n}\nfunction mn(t, r, e) {\n  const u = n(z(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3),\n    i = n(K(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction pn(t, r, e, u) {\n  const o = n(J(t, r, e), 3),\n    i = n(B(o[0], o[1], o[2]), 3),\n    c = n(j(i[0], i[1], i[2], u), 3);\n  return [c[0], c[1], c[2]];\n}\nfunction yn(t, r, e) {\n  const u = n(z(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3),\n    i = n(K(o[0], o[1], o[2]), 3),\n    c = n(N(i[0], i[1], i[2]), 3);\n  return [c[0], c[1], c[2]];\n}\nfunction bn(t, r, e, u) {\n  const o = n(O(t, r, e), 3),\n    i = n(J(o[0], o[1], o[2]), 3),\n    c = n(B(i[0], i[1], i[2]), 3),\n    a = n(j(c[0], c[1], c[2], u), 3);\n  return [a[0], a[1], a[2]];\n}\nfunction kn(t, r, e) {\n  const u = n(z(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction wn(t, r, e, u) {\n  const o = n(B(t, r, e), 3),\n    i = n(j(o[0], o[1], o[2], u), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction vn(t, r, e) {\n  const u = n(E(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3),\n    i = n(K(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction Mn(t, r, e, u) {\n  const o = n(J(t, r, e), 3),\n    i = n(B(o[0], o[1], o[2]), 3),\n    c = n(C(i[0], i[1], i[2], u), 3);\n  return [c[0], c[1], c[2]];\n}\nfunction qn(t, r, e) {\n  const u = n(E(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3),\n    i = n(K(o[0], o[1], o[2]), 3),\n    c = n(N(i[0], i[1], i[2]), 3);\n  return [c[0], c[1], c[2]];\n}\nfunction In(t, r, e, u) {\n  const o = n(O(t, r, e), 3),\n    i = n(J(o[0], o[1], o[2]), 3),\n    c = n(B(i[0], i[1], i[2]), 3),\n    a = n(C(c[0], c[1], c[2], u), 3);\n  return [a[0], a[1], a[2]];\n}\nfunction xn(t, r, e) {\n  const u = n(E(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction Sn(t, r, e, u) {\n  const o = n(B(t, r, e), 3),\n    i = n(C(o[0], o[1], o[2], u), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction An(t, r, e) {\n  const u = n(P(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3),\n    i = n(K(o[0], o[1], o[2]), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction $n(t, r, e, u) {\n  const o = n(J(t, r, e), 3),\n    i = n(B(o[0], o[1], o[2]), 3),\n    c = n(L(i[0], i[1], i[2], u), 3);\n  return [c[0], c[1], c[2]];\n}\nfunction jn(t, r, e) {\n  const u = n(P(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3),\n    i = n(K(o[0], o[1], o[2]), 3),\n    c = n(N(i[0], i[1], i[2]), 3);\n  return [c[0], c[1], c[2]];\n}\nfunction zn(t, r, e, u) {\n  const o = n(O(t, r, e), 3),\n    i = n(J(o[0], o[1], o[2]), 3),\n    c = n(B(i[0], i[1], i[2]), 3),\n    a = n(L(c[0], c[1], c[2], u), 3);\n  return [a[0], a[1], a[2]];\n}\nfunction Cn(t, r, e) {\n  const u = n(P(t, r, e), 3),\n    o = n(T(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction En(t, r, e, u) {\n  const o = n(B(t, r, e), 3),\n    i = n(L(o[0], o[1], o[2], u), 3);\n  return [i[0], i[1], i[2]];\n}\nfunction Ln(t, r, e) {\n  const u = n(K(t, r, e), 3),\n    o = n(N(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction Pn(t, r, e) {\n  const u = n(O(t, r, e), 3),\n    o = n(J(u[0], u[1], u[2]), 3);\n  return [o[0], o[1], o[2]];\n}\nfunction Tn(n) {\n  return j(..._(n));\n}\nfunction Bn(n) {\n  return L(..._(n));\n}\nfunction Dn(n) {\n  return C(..._(n));\n}\nfunction Fn(n) {\n  return ln(..._(n));\n}\nfunction Gn(n) {\n  return fn(..._(n));\n}\nfunction Hn(n) {\n  return T(..._(n));\n}\nfunction Jn(n, t, r) {\n  return nn(...z(n, t, r));\n}\nfunction Kn(n, t, r) {\n  return nn(...z(n, t, r));\n}\nfunction Nn(n, t, r) {\n  return nn(...E(n, t, r));\n}\nfunction On(n, t, r) {\n  return nn(...sn(n, t, r));\n}\nfunction Qn(n, t, r) {\n  return nn(...dn(n, t, r));\n}\nfunction Rn(n, t, r) {\n  return nn(...B(n, t, r));\n}\nfunction Un(n, t) {\n  return un(Fn(n), Fn(t));\n}\nfunction Vn(n, t) {\n  return un(mn(...n), mn(...t));\n}\nfunction Wn(n, t) {\n  return un(An(...n), An(...t));\n}\nfunction Xn(n, t) {\n  return un(vn(...n), vn(...t));\n}\nfunction Yn(n, t) {\n  return un(gt(n), gt(t));\n}\nfunction Zn(n, t) {\n  return un(O(...n), O(...t));\n}\nfunction _n(n, t) {\n  return un(ln(...n), ln(...t));\n}\nfunction nt(n, t) {\n  return un(K(...n), K(...t));\n}\nfunction tt(n, t) {\n  return Q(_(n), _(t));\n}\nfunction rt(n, t) {\n  return Q(z(...n), z(...t));\n}\nfunction et(n, t) {\n  return Q(P(...n), P(...t));\n}\nfunction ut(n, t) {\n  return Q(E(...n), E(...t));\n}\nfunction ot(n, t) {\n  return Q(rn(n), rn(t));\n}\nfunction it(n, t) {\n  return Q(sn(...n), sn(...t));\n}\nfunction ct(n, t) {\n  return Q(dn(...n), dn(...t));\n}\nfunction at(n, t) {\n  return Q(B(...n), B(...t));\n}\nfunction lt(n) {\n  return nn(...rn(n));\n}\nfunction st(n) {\n  return j(...rn(n));\n}\nfunction ft(n) {\n  return L(...rn(n));\n}\nfunction dt(n) {\n  return C(...rn(n));\n}\nfunction gt(n) {\n  return ln(...rn(n));\n}\nfunction ht(n) {\n  return fn(...rn(n));\n}\nfunction mt(n) {\n  return T(...rn(n));\n}\nexport { Un as hex2ciede, tt as hex2contrast, Tn as hex2hsl, Bn as hex2hsv, Dn as hex2hwb, Fn as hex2lab, Gn as hex2lch, _ as hex2rgb, Hn as hex2xyz, Vn as hsl2ciede, rt as hsl2contrast, Jn as hsl2hex, D as hsl2hsv, hn as hsl2hwb, mn as hsl2lab, yn as hsl2lch, z as hsl2rgb, kn as hsl2xyz, Wn as hsv2ciede, et as hsv2contrast, Kn as hsv2hex, F as hsv2hsl, H as hsv2hwb, An as hsv2lab, jn as hsv2lch, P as hsv2rgb, Cn as hsv2xyz, Xn as hwb2ciede, ut as hwb2contrast, Nn as hwb2hex, gn as hwb2hsl, G as hwb2hsv, vn as hwb2lab, qn as hwb2lch, E as hwb2rgb, xn as hwb2xyz, Yn as keyword2ciede, ot as keyword2contrast, lt as keyword2hex, st as keyword2hsl, ft as keyword2hsv, dt as keyword2hwb, gt as keyword2lab, ht as keyword2lch, rn as keyword2rgb, mt as keyword2xyz, un as lab2ciede, it as lab2contrast, On as lab2hex, pn as lab2hsl, $n as lab2hsv, Mn as lab2hwb, N as lab2lch, sn as lab2rgb, J as lab2xyz, Zn as lch2ciede, ct as lch2contrast, Qn as lch2hex, bn as lch2hsl, zn as lch2hsv, In as lch2hwb, O as lch2lab, dn as lch2rgb, Pn as lch2xyz, _n as rgb2ciede, Q as rgb2contrast, nn as rgb2hex, j as rgb2hsl, L as rgb2hsv, C as rgb2hwb, ln as rgb2lab, fn as rgb2lch, T as rgb2xyz, nt as xyz2ciede, at as xyz2contrast, Rn as xyz2hex, wn as xyz2hsl, En as xyz2hsv, Sn as xyz2hwb, K as xyz2lab, Ln as xyz2lch, B as xyz2rgb };","map":{"version":3,"names":["t","n","r","o","i","e","c","u","v","M","map","reduce","a","l","s","atan2d","g","p","f","b","d","q","h","x","m","Math","abs","atan2","y","cbrt","cos","k","exp","w","floor","max","min","PI","I","pow","sin","S","sqrt","A","$","j","z","C","E","L","P","T","B","D","F","G","H","J","K","N","O","Q","R","U","X","Y","Z","W","V","_","match","tn","parseInt","nn","round","toString","slice","rn","en","String","toLowerCase","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","un","on","cn","an","ln","sn","fn","dn","gn","hn","mn","pn","yn","bn","kn","wn","vn","Mn","qn","In","xn","Sn","An","$n","jn","zn","Cn","En","Ln","Pn","Tn","Bn","Dn","Fn","Gn","Hn","Jn","Kn","Nn","On","Qn","Rn","Un","Vn","Wn","Xn","Yn","gt","Zn","_n","nt","tt","rt","et","ut","ot","it","ct","at","lt","st","ft","dt","ht","mt","hex2ciede","hex2contrast","hex2hsl","hex2hsv","hex2hwb","hex2lab","hex2lch","hex2rgb","hex2xyz","hsl2ciede","hsl2contrast","hsl2hex","hsl2hsv","hsl2hwb","hsl2lab","hsl2lch","hsl2rgb","hsl2xyz","hsv2ciede","hsv2contrast","hsv2hex","hsv2hsl","hsv2hwb","hsv2lab","hsv2lch","hsv2rgb","hsv2xyz","hwb2ciede","hwb2contrast","hwb2hex","hwb2hsl","hwb2hsv","hwb2lab","hwb2lch","hwb2rgb","hwb2xyz","keyword2ciede","keyword2contrast","keyword2hex","keyword2hsl","keyword2hsv","keyword2hwb","keyword2lab","keyword2lch","keyword2rgb","keyword2xyz","lab2ciede","lab2contrast","lab2hex","lab2hsl","lab2hsv","lab2hwb","lab2lch","lab2rgb","lab2xyz","lch2ciede","lch2contrast","lch2hex","lch2hsl","lch2hsv","lch2hwb","lch2lab","lch2rgb","lch2xyz","rgb2ciede","rgb2contrast","rgb2hex","rgb2hsl","rgb2hsv","rgb2hwb","rgb2lab","rgb2lch","rgb2xyz","xyz2ciede","xyz2contrast","xyz2hex","xyz2hsl","xyz2hsv","xyz2hwb","xyz2lab","xyz2lch","xyz2rgb"],"sources":["/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/util.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/rgb-hsl.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/rgb-hwb.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/rgb-hsv.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/rgb-xyz.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/hsl-hsv.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/hwb-hsv.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/lab-xyz.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/lab-lch.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/rgb-contrast.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/hex-rgb.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/keyword-rgb.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/lab-ciede.js","/home/chirag/Documents/myportfolio/node_modules/@csstools/convert-colors/src/index.js"],"sourcesContent":["/**\n* @private\n* @func rgb2hue\n* @desc Return a hue angle from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Red (0 - 100)\n* @param {Number} b - Red (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {Number} Hue Angle (0 - 360)\n* @example\n* rgb2hue(100, 0, 0)\n* @example\n* rgb2hue(100, 0, 0, 0)\n*/\n\nexport function rgb2hue(rgbR, rgbG, rgbB, fallbackhue = 0) {\n\tconst value     = rgb2value(rgbR, rgbG, rgbB);\n\tconst whiteness = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst delta     = value - whiteness;\n\n\tif (delta) {\n\t\t// calculate segment\n\t\tconst segment = value === rgbR\n\t\t\t? (rgbG - rgbB) / delta\n\t\t: value === rgbG\n\t\t\t? (rgbB - rgbR) / delta\n\t\t: (rgbR - rgbG) / delta;\n\n\t\t// calculate shift\n\t\tconst shift = value === rgbR\n\t\t\t? segment < 0\n\t\t\t\t? 360 / 60\n\t\t\t\t: 0 / 60\n\t\t: value === rgbG\n\t\t\t? 120 / 60\n\t\t: 240 / 60;\n\n\t\t// calculate hue\n\t\tconst hue = (segment + shift) * 60;\n\n\t\treturn hue;\n\t} else {\n\t\t// otherwise return the Hue Fallback\n\t\treturn fallbackhue;\n\t}\n}\n\n/**\n* @private\n* @func hue2rgb\n* @desc Return an RGB channel from a hue angle\n* @param {Number} t1\n* @param {Number} t2\n* @param {Number} h - Hue Angle (0 - 360)\n* @return {Number} RGB channel (0 - 100)\n* @example\n* hue2rgb(0, 0, 0)\n*/\n\nexport function hue2rgb(t1, t2, hue) {\n\t// calculate the ranged hue\n\tconst rhue = hue < 0 ? hue + 360 : hue > 360 ? hue - 360 : hue;\n\n\t// calculate the rgb value\n\tconst rgb = rhue * 6 < 360\n\t\t? t1 + (t2 - t1) * rhue / 60\n\t: rhue * 2 < 360\n\t\t? t2\n\t: rhue * 3 < 720\n\t\t? t1 + (t2 - t1) * (240 - rhue) / 60\n\t: t1;\n\n\treturn rgb;\n}\n\n/**\n* @private\n* @func luminance2contrast\n* @desc Return the contrast ratio between 2 luminance.\n* @param {Number} l1 - Relative luminance of one color\n* @param {Number} l2 - Relative luminance of another color\n* @return {Number} Contrast ratio between the 2 luminance\n* @example\n* luminance2contrast(0.2126, 0) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport function luminance2contrast(relativeLuminance1, relativeLuminance2) {\n\t// l1 is the relative luminance of the lighter of the colors\n\tconst l1 = max(relativeLuminance1, relativeLuminance2);\n\n\t// l1 is the relative luminance of the darker of the colors\n\tconst l2 = min(relativeLuminance1, relativeLuminance2);\n\n\treturn (l1 * precision + 0.05 * precision) / (l2 * precision + 0.05 * precision);\n}\n\n\n/* RGB tooling\n/* ========================================================================== */\n\nexport function rgb2value(rgbR, rgbG, rgbB) {\n\tconst value = max(rgbR, rgbG, rgbB);\n\n\treturn value;\n}\n\nexport function rgb2whiteness(rgbR, rgbG, rgbB) {\n\tconst whiteness = min(rgbR, rgbG, rgbB);\n\n\treturn whiteness;\n}\n\n/* Math matrix\n/* ========================================================================== */\n\nexport function matrix(params, mats) {\n\treturn mats.map(\n\t\tmat => mat.reduce(\n\t\t\t// (acc, value, index) => acc + params[index] * value,\n\t\t\t(acc, value, index) => acc + params[index] * precision * (value * precision) / precision / precision,\n\t\t\t0\n\t\t)\n\t);\n}\n\n/* Precision\n/* ========================================================================== */\n\nexport const precision = 100000000;\n\n/* D50 reference white\n/* ========================================================================== */\n\nexport const [ wd50X, wd50Y, wd50Z ] = [ 96.42, 100, 82.49 ];\n\n/* Math Expressions\n/* ========================================================================== */\n\nexport const atan2d = (y, x) => rad2deg(atan2(y, x)); // arc-tangent in degrees\nexport const cosd = x => cos(deg2rad(x)); // cosine of the specified angle in degrees\nexport const deg2rad = x => x * PI / 180; // degree to radian\nexport const rad2deg = x => x * 180 / PI; // radian to degree\nexport const sind = x => sin(deg2rad(x)); // sine in degrees\n\n/* Math Constants\n/* ========================================================================== */\n\nexport const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cbrt = Math.cbrt;\nexport const cos = Math.cos;\nexport const exp = Math.exp;\nexport const floor = Math.floor;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const PI = Math.PI;\nexport const pow = Math.pow;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = pow(6, 3) / pow(29, 3);\nexport const kappa = pow(29, 3) / pow(3, 3);\n","import { abs, rgb2hue, rgb2value, rgb2whiteness, hue2rgb } from './util';\n\n/**\n* @func rgb2hsl\n* @desc Return a HSL color from an RGB color\n* @param {Number} r - red (0 - 100)\n* @param {Number} g - green (0 - 100)\n* @param {Number} b - blue (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* rgb2hsl(0, 100, 100) // => [0, 100, 50]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function rgb2hsl(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hslH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hslV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hslW = rgb2whiteness(rgbR, rgbG, rgbB);\n\n\t// calculate value/whiteness delta\n\tconst hslD = hslV - hslW;\n\n\t// calculate lightness\n\tconst hslL = (hslV + hslW) / 2;\n\n\t// calculate saturation\n\tconst hslS = hslD === 0 ? 0 : hslD / (100 - abs(2 * hslL - 100)) * 100;\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2rgb\n* @desc Return an RGB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsl2rgb(0, 100, 50) // => [0, 100, 100]\n* @link https://www.w3.org/TR/css-color-3/#hsl-color\n* @link https://www.w3.org/TR/css-color-4/#hsl-to-rgb\n* @link https://www.rapidtables.com/convert/color/rgb-to-hsl.html\n* @link https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n*/\n\nexport function hsl2rgb(hslH, hslS, hslL) {\n\t// calcuate t2\n\tconst t2 = hslL <= 50 ? hslL * (hslS + 100) / 100 : hslL + hslS - hslL * hslS / 100;\n\n\t// calcuate t1\n\tconst t1 = hslL * 2 - t2;\n\n\t// calculate rgb\n\tconst [ rgbR, rgbG, rgbB ] = [\n\t\thue2rgb(t1, t2, hslH + 120),\n\t\thue2rgb(t1, t2, hslH),\n\t\thue2rgb(t1, t2, hslH - 120)\n\t];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { rgb2hue, rgb2whiteness, rgb2value } from './util';\nimport { hsl2rgb } from './rgb-hsl';\n\n/**\n* @func rgb2hwb\n* @desc Return an HWB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @param {Number} f - Hue Fallback (0 - 360)\n* @return {ArrayHWB}\n* @example\n* rgb2hwb(100, 0, 0) // => [0, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function rgb2hwb(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hwbH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\tconst hwbW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hwbV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hwbB = 100 - hwbV;\n\n\treturn [hwbH, hwbW, hwbB];\n}\n\n/**\n* @func hwb2rgb\n* @desc Return an RGB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hwb2rgb(0, 0, 0) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#hwb-to-rgb\n* @link http://alvyray.com/Papers/CG/hwb2rgb.htm\n*/\n\nexport function hwb2rgb(hwbH, hwbW, hwbB, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hwbH, 100, 50, fallbackhue).map(\n\t\tv => v * (100 - hwbW - hwbB) / 100 + hwbW\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { floor, rgb2value, rgb2whiteness, rgb2hue } from './util';\n\n/**\n* @func rgb2hsv\n* @desc Return an HSV color from an RGB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSV}\n* @example\n* rgb2hsv(100, 0, 0) // => [0, 100, 100]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function rgb2hsv(rgbR, rgbG, rgbB, fallbackhue) {\n\tconst hsvV = rgb2value(rgbR, rgbG, rgbB);\n\tconst hsvW = rgb2whiteness(rgbR, rgbG, rgbB);\n\tconst hsvH = rgb2hue(rgbR, rgbG, rgbB, fallbackhue);\n\n\t// calculate saturation\n\tconst hsvS = hsvV === hsvW ? 0 : (hsvV - hsvW) / hsvV * 100;\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2rgb\n* @desc Return an RGB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayRGB}\n* @example\n* hsv2rgb(100, 0, 0) // => [100, 0, 0]\n* @link http://alvyray.com/Papers/CG/hsv2rgb.htm\n*/\n\nexport function hsv2rgb(hsvH, hsvS, hsvV) {\n\tconst rgbI = floor(hsvH / 60);\n\n\t// calculate rgb parts\n\tconst rgbF = hsvH / 60 - rgbI & 1 ? hsvH / 60 - rgbI : 1 - hsvH / 60 - rgbI;\n\tconst rgbM = hsvV * (100 - hsvS) / 100;\n\tconst rgbN = hsvV * (100 - hsvS * rgbF) / 100;\n\n\tconst [ rgbR, rgbG, rgbB ] = rgbI === 5\n\t\t? [ hsvV, rgbM, rgbN ]\n\t: rgbI === 4\n\t\t? [ rgbN, rgbM, hsvV ]\n\t: rgbI === 3\n\t\t? [ rgbM, rgbN, hsvV ]\n\t: rgbI === 2\n\t\t? [ rgbM, hsvV, rgbN ]\n\t: rgbI === 1\n\t\t? [ rgbN, hsvV, rgbM ]\n\t: [ hsvV, rgbN, rgbM ];\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","import { matrix, pow } from './util';\n\n/**\n* @func rgb2xyz\n* @desc Return an XYZ color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* rgb2xyz(100, 0, 0) // => [41.25, 21.27, 1.93]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function rgb2xyz(rgbR, rgbG, rgbB) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = [ rgbR, rgbG, rgbB ].map(\n\t\tv => v > 4.045 ? pow((v + 5.5) / 105.5, 2.4) * 100 : v / 12.92\n\t);\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix([ lrgbR, lrgbB, lrgbG ], [\n\t\t[0.4124564, 0.3575761, 0.1804375],\n\t\t[0.2126729, 0.7151522, 0.0721750],\n\t\t[0.0193339, 0.1191920, 0.9503041]\n\t]);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2rgb\n* @desc Return an XYZ color from an RGB color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayRGB}\n* @example\n* xyz2rgb(41.25, 21.27, 1.93) // => [100, 0, 0]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n*/\n\nexport function xyz2rgb(xyzX, xyzY, xyzZ) {\n\tconst [ lrgbR, lrgbB, lrgbG ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 3.2404542, -1.5371385, -0.4985314],\n\t\t[-0.9692660,  1.8760108,  0.0415560],\n\t\t[ 0.0556434, -0.2040259,  1.0572252]\n\t]);\n\n\tconst [ rgbR, rgbG, rgbB ] = [ lrgbR, lrgbB, lrgbG ].map(\n\t\tv => v > 0.31308 ? 1.055 * pow(v / 100, 1 / 2.4) * 100 - 5.5 : 12.92 * v\n\t);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n","/**\n* @func hsl2hsv\n* @desc Return an HSV color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hsl2hsv(0, 100, 50)\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsl2hsv(hslH, hslS, hslL) {\n\tconst hsv1 = hslS * (hslL < 50 ? hslL : 100 - hslL) / 100;\n\tconst hsvS = hsv1 === 0 ? 0 : 2 * hsv1 / (hslL + hsv1) * 100;\n\tconst hsvV = hslL + hsv1;\n\n\treturn [ hslH, hsvS, hsvV ];\n}\n\n/**\n* @func hsv2hsl\n* @desc Return an HSL color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hsv2hsl(0, 0, 0) // => [0, 100, 50]\n* @link https://gist.github.com/defims/0ca2ef8832833186ed396a2f8a204117\n*/\n\nexport function hsv2hsl(hsvH, hsvS, hsvV) {\n\tconst hslL = (200 - hsvS) * hsvV / 100;\n\n\tconst [ hslS, hslV ] = [\n\t\thslL === 0 || hslL === 200 ? 0 : hsvS * hsvV / 100 / (hslL <= 100 ? hslL : 200 - hslL) * 100,\n\t\thslL * 5 / 10\n\t];\n\n\treturn [ hsvH, hslS, hslV ];\n}\n","/**\n* @func hwb2hsv\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSV}\n* @example\n* hwb2hsv(0, 0, 0) // => [0, 100, 100]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hwb2hsv(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = [\n\t\thwbH,\n\t\thwbB === 100 ? 0 : 100 - hwbW / (100 - hwbB) * 100,\n\t\t100 - hwbB\n\t];\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n\n/**\n* @func hsv2hwb\n* @desc Return an HWB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsv2hwb(0, 100, 100) // => [0, 0, 0]\n* @link https://en.wikipedia.org/wiki/HWB_color_model#Converting_to_and_from_HSV\n*/\n\nexport function hsv2hwb(hsvH, hsvS, hsvV) {\n\tconst [ hwbH, hwbW, hwbB ] = [\n\t\thsvH,\n\t\t(100 - hsvS) * hsvV / 100,\n\t\t100 - hsvV\n\t];\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n","import { cbrt, epsilon, kappa, pow, wd50X, wd50Y, wd50Z, matrix } from './util';\n\n/**\n* @func lab2xyz\n* @desc Return an XYZ color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayXYZ}\n* @example\n* lab2xyz(54.29, 80.82, 69.88) // => 41.25, 21.27, 1.93\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function lab2xyz(labL, labA, labB) {\n\t// compute f, starting with the luminance-related term\n\tconst f2 = (labL + 16) / 116;\n\tconst f1 = labA / 500 + f2;\n\tconst f3 = f2 - labB / 200;\n\n\t// compute pre-scaled XYZ\n\tconst [ initX, initY, initZ ] = [\n\t\tpow(f1, 3) > epsilon   ? pow(f1, 3)                : (116 * f1 - 16) / kappa,\n\t\tlabL > kappa * epsilon ? pow((labL + 16) / 116, 3) : labL / kappa,\n\t\tpow(f3, 3) > epsilon   ? pow(f3, 3)                : (116 * f3 - 16) / kappa\n\t];\n\n\tconst [ xyzX, xyzY, xyzZ ] = matrix(\n\t\t// compute XYZ by scaling pre-scaled XYZ by reference white\n\t\t[ initX * wd50X, initY * wd50Y, initZ * wd50Z ],\n\t\t// calculate D65 XYZ from D50 XYZ\n\t\t[\n\t\t\t[ 0.9555766, -0.0230393,  0.0631636],\n\t\t\t[-0.0282895,  1.0099416,  0.0210077],\n\t\t\t[ 0.0122982, -0.0204830,  1.3299098]\n\t\t]\n\t);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2lab\n* @desc Return an LAB color from a XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLAB}\n* @example\n* xyz2lab(41.25, 21.27, 1.93) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#rgb-to-lab\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.easyrgb.com/en/math.php\n*/\n\nexport function xyz2lab(xyzX, xyzY, xyzZ) {\n\t// calculate D50 XYZ from D65 XYZ\n\tconst [ d50X, d50Y, d50Z ] = matrix([ xyzX, xyzY, xyzZ ], [\n\t\t[ 1.0478112,  0.0228866, -0.0501270],\n\t\t[ 0.0295424,  0.9904844, -0.0170491],\n\t\t[-0.0092345,  0.0150436,  0.7521316]\n\t]);\n\n\t// calculate f\n\tconst [ f1, f2, f3 ] = [\n\t\td50X / wd50X,\n\t\td50Y / wd50Y,\n\t\td50Z / wd50Z\n\t].map(\n\t\tvalue => value > epsilon ? cbrt(value) : (kappa * value + 16) / 116\n\t);\n\n\tconst [ labL, labA, labB ] = [\n\t\t116 * f2 - 16,\n\t\t500 * (f1 - f2),\n\t\t200 * (f2 - f3)\n\t];\n\n\treturn [ labL, labA, labB ];\n}\n","import { atan2, cosd, pow, rad2deg, sind, sqrt } from './util';\n\n/**\n* @func lab2lch\n* @desc Return an LCH color from a LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayLAB}\n* @example\n* lab2lch(54.29, 80.82, 69.88) // => [54.29, 106.84, 40.85]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lab2lch(labL, labA, labB) {\n\tconst [ lchC, lchH ] = [\n\t\tsqrt(pow(labA, 2) + pow(labB, 2)), // convert to chroma\n\t\trad2deg(atan2(labB, labA)) // convert to hue, in degrees\n\t];\n\n\treturn [ labL, lchC, lchH ];\n}\n\n/**\n* @func lch2lab\n* @desc Return a LAB color from an LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2lab(54.29, 106.84, 40.85) // => [54.29, 80.82, 69.88]\n* @link https://www.w3.org/TR/css-color-4/#color-conversion-code\n* @link https://www.w3.org/TR/css-color-4/#lch-to-lab\n*/\n\nexport function lch2lab(lchL, lchC, lchH) {\n\t// convert to Lab a and b from the polar form\n\tconst [ labA, labB ] = [\n\t\tlchC * cosd(lchH),\n\t\tlchC * sind(lchH)\n\t];\n\n\treturn [ lchL, labA, labB ];\n}\n","import { luminance2contrast, pow, precision } from './util'\n\n/**\n* @func rgb2contrast\n* @desc Return the contrast ratio of of RGB colors\n* @param {ArrayRGB} rgb1 - RGB Color Array\n* @param {ArrayRGB} rgb2 - RGB Color Array\n* @return {NumberContrast}\n* @example\n* rgb2contrast([100, 0, 0], [0, 0, 0]) // => 5.252\n* @link https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n*/\n\nexport default function rgb2contrast(rgb1, rgb2) {\n\tconst luminance1 = rgb2luminance(...rgb1);\n\tconst luminance2 = rgb2luminance(...rgb2);\n\n\treturn luminance2contrast(luminance1, luminance2);\n}\n\n/**\n* @private\n* @func rgb2luminance\n* @desc Return the relative brightness of RGB\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {Number} Relative luminance of the color\n* @example\n* rgb2luminance(100, 0, 0) // => 0.2126\n* @link https://www.w3.org/TR/WCAG21/#dfn-relative-luminance\n*/\n\nexport function rgb2luminance(rgbR, rgbG, rgbB) {\n\treturn (adjustChannel(rgbR) * coefficientR + adjustChannel(rgbG) * coefficientG + adjustChannel(rgbB) * coefficientB) / precision;\n}\n\n// low-gamma adjust coefficients\nconst adjustChannel = x => x <= 3.928 ? x / lowc : adjustGamma(x);\nconst adjustGamma = x => pow((x + 5.5) / 105.5, 2.4);\nconst lowc = 1292;\n\n// red/green/blue coefficients\nconst coefficientR = 0.2126 * precision;\nconst coefficientG = 0.7152 * precision;\nconst coefficientB = 0.0722 * precision;\n","/**\n* @func hex2rgb\n* @desc Return an RGBA color from a Hex color.\n* @param {StringHex} hex\n* @return {ArrayRGBA}\n* @example\n* hex2rgb(\"#f00\") // => [100, 0, 0, 100]\n* hex2rgb(\"#f00f\") // => [100, 0, 0, 100]\n* @example\n* hex2rgb(\"#ff0000\") // => [100, 0, 0, 100]\n* hex2rgb(\"#ff0000ff\") // => [100, 0, 0, 100]\n*/\n\nexport function hex2rgb(hex) {\n\t// #<hex-color>{3,4,6,8}\n\tconst [, r, g, b, a, rr, gg, bb, aa] = hex.match(hexColorMatch) || [];\n\n\tif (rr !== undefined || r !== undefined) {\n\t\tconst red   = rr !== undefined ? parseInt(rr, 16) : parseInt(r + r, 16);\n\t\tconst green = gg !== undefined ? parseInt(gg, 16) : parseInt(g + g, 16);\n\t\tconst blue  = bb !== undefined ? parseInt(bb, 16) : parseInt(b + b, 16);\n\t\tconst alpha = aa !== undefined ? parseInt(aa, 16) : a !== undefined ? parseInt(a + a, 16) : 255;\n\n\t\treturn [red, green, blue, alpha].map(c => c * 100 / 255);\n\t}\n\n\treturn undefined;\n}\n\n/**\n* @func rgb2hex\n* @desc Return a HEX color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {StringHex}\n* @example\n* rgb2hex(100, 0, 0) // => \"#ff0000\"\n*/\n\nexport function rgb2hex(rgbR, rgbG, rgbB) {\n\treturn `#${((1 << 24) + (Math.round(rgbR * 255 / 100) << 16) + (Math.round(rgbG * 255 / 100) << 8) + Math.round(rgbB * 255 / 100)).toString(16).slice(1)}`;\n}\n\nconst hexColorMatch = /^#?(?:([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?|([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?)$/i;\n","/**\n* @func keyword2rgb\n* @desc Return an RGB color from a CSS keyword color\n* @param {StringKeyword} keyword\n* @return {ArrayRGB}\n* @example\n* keyword2rgb('red') // => [100, 0, 0]\n*/\n\nexport default function keyword2rgb(keyword) {\n\tconst rgb255 = keywords[String(keyword).toLowerCase()];\n\n\treturn rgb255 ? rgb255.map(x => x * 100 / 255) : null;\n}\n\nconst keywords = {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\ttransparent: [0, 0, 0],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n};\n","import { abs, atan2d, cosd, exp, pow, sind, sqrt, precision } from './util';\n\n/* Return\n/* ========================================================================== */\n\n/**\n* @func lab2ciede\n* @desc Return the CIEDE2000 difference between 2 CIE LAB colors (International Commission on Illumination, Delta E).\n* @param {Array} lab1 - CIE LAB color\n* @param {Number} lab1.0 - Lightness\n* @param {Number} lab1.1 - Red/Green Coordinate\n* @param {Number} lab1.2 - Yellow/Blue Coordinate\n* @param {Array} lab2 - CIE LAB color\n* @param {Number} lab2.0 - Lightness\n* @param {Number} lab2.1 - Red/Green Coordinate\n* @param {Number} lab2.2 - Yellow/Blue Coordinate\n* @return {NumberCIEDE}\n* @example\n* lab2ciede([97.14, -21.56, 94.48], [0, 0, 0]) // => 100\n* @link https://en.wikipedia.org/wiki/Color_difference#CIEDE2000\n*/\n\nexport default function lab2ciede([L1, a1, b1], [L2, a2, b2]) {\n\tconst c1 = sqrt(pow(a1, 2) + pow(b1, 2));\n\tconst c2 = sqrt(pow(a2, 2) + pow(b2, 2));\n\n\tconst deltaLPrime = L2 - L1;\n\n\tconst lBar = (L1 + L2) / 2;\n\tconst cBar = (c1 + c2) / 2;\n\n\tconst cBarPow7 = pow(cBar, 7);\n\tconst cCoeff = sqrt(cBarPow7 / (cBarPow7 + pow(25, 7)));\n\tconst a1Prime = a1 + a1 / 2 * (1 - cCoeff);\n\tconst a2Prime = a2 + a2 / 2 * (1 - cCoeff);\n\n\tconst c1Prime = sqrt(a1Prime * a1Prime + b1 * b1);\n\tconst c2Prime = sqrt(a2Prime * a2Prime + b2 * b2);\n\tconst cBarPrime = (c1Prime + c2Prime) / 2;\n\tconst deltaCPrime = c2Prime - c1Prime;\n\n\tconst h1Prime = a1Prime === 0 && b1 === 0 ? 0 : atan2d(b1, a1Prime) % 360;\n\tconst h2Prime = a2Prime === 0 && b2 === 0 ? 0 : atan2d(b2, a2Prime) % 360;\n\n\tlet deltaSmallHPrime;\n\tlet deltaBigHPrime;\n\tlet hBarPrime;\n\n\tif (c1Prime === 0 || c2Prime === 0) {\n\t\tdeltaSmallHPrime = 0;\n\t\tdeltaBigHPrime = 0;\n\t\thBarPrime = h1Prime + h2Prime;\n\t} else {\n\t\tdeltaSmallHPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? h2Prime - h1Prime\n\t\t: h2Prime <= h1Prime\n\t\t\t? h2Prime - h1Prime + 360\n\t\t: h2Prime - h1Prime - 360;\n\n\t\tdeltaBigHPrime = 2 * sqrt(c1Prime * c2Prime) * sind(deltaSmallHPrime / 2);\n\n\t\thBarPrime = abs(h1Prime - h2Prime) <= 180\n\t\t\t? (h1Prime + h2Prime) / 2\n\t\t: h1Prime + h2Prime < 360\n\t\t\t? (h1Prime + h2Prime + 360) / 2\n\t\t: (h1Prime + h2Prime - 360) / 2;\n\t}\n\n\tconst T = 1 - 0.17 * precision * cosd(hBarPrime - 30) + 0.24 * precision * cosd(2 * hBarPrime) + 0.32 * precision * cosd(3 * hBarPrime + 6) - 0.2 * precision * cosd(4 * hBarPrime - 63) / precision / precision;\n\n\tconst slCoeff = (lBar - 50) * (lBar - 50);\n\tconst sl = 1 + 0.015 * precision * slCoeff / sqrt(20 + slCoeff) / precision;\n\tconst sc = 1 + 0.045 * precision * cBarPrime / precision;\n\tconst sh = 1 + 0.015 * precision * cBarPrime * T / precision;\n\n\tconst RtCoeff = 60 * exp(-((hBarPrime - 275) / 25) * ((hBarPrime - 275) / 25));\n\tconst Rt = -2 * cCoeff * sind(RtCoeff);\n\n\tconst term1 = deltaLPrime / (kl * sl);\n\tconst term2 = deltaCPrime / (kc * sc);\n\tconst term3 = deltaBigHPrime / (kh * sh);\n\tconst term4 = Rt * term2 * term3;\n\n\treturn sqrt(term1 * term1 + term2 * term2 + term3 * term3 + term4);\n}\n\n// weight factors\nconst kl = 1;\nconst kc = 1;\nconst kh = 1;\n","import { rgb2hsl, hsl2rgb } from './rgb-hsl';\nimport { rgb2hwb, hwb2rgb } from './rgb-hwb';\nimport { rgb2hsv, hsv2rgb } from './rgb-hsv';\nimport { rgb2xyz, xyz2rgb } from './rgb-xyz';\nimport { hsl2hsv, hsv2hsl } from './hsl-hsv';\nimport { hwb2hsv, hsv2hwb } from './hwb-hsv';\nimport { lab2xyz, xyz2lab } from './lab-xyz';\nimport { lab2lch, lch2lab } from './lab-lch';\nimport rgb2contrast from './rgb-contrast';\nimport { hex2rgb, rgb2hex } from './hex-rgb';\nimport keyword2rgb from './keyword-rgb';\nimport lab2ciede from './lab-ciede';\n\n/* Convert between RGB and Lab\n/* ========================================================================== */\n\n/**\n* @func rgb2lab\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLAB}\n* @example\n* rgb2lab(100, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction rgb2lab(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2rgb\n* @desc Return an RGB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayRGBA}\n* @example\n* lab2rgb(54.29, 80.82, 69.88) // => [100, 0, 0]\n*/\n\nfunction lab2rgb(labL, labA, labB) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between RGB and LCH\n/* ========================================================================== */\n\n/**\n* @func rgb2lch\n* @desc Return a CIE LAB color from an RGB color\n* @param {Number} r - Red (0 - 100)\n* @param {Number} g - Green (0 - 100)\n* @param {Number} b - Blue (0 - 100)\n* @return {ArrayLCH}\n* @example\n* rgb2lch(100, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction rgb2lch(rgbR, rgbG, rgbB) {\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2rgb\n* @desc Return an RGB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue\n* @return {ArrayRGBA}\n* @example\n* lch2rgb(54.29, 106.84, 40.85) // => [100, 0, 0]\n*/\n\nfunction lch2rgb(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\n\treturn [ rgbR, rgbG, rgbB ];\n}\n\n/* Convert between HSL and HWB\n/* ========================================================================== */\n\n/**\n* @func hwb2hsl\n* @desc Return an HSV color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayHSL}\n* @example\n* hwb2hsl(0, 0, 0) // => [0, 0, 100]\n*/\n\nfunction hwb2hsl(hwbH, hwbW, hwbB) {\n\tconst [ hsvH, hsvS, hsvV ] = hwb2hsv(hwbH, hwbW, hwbB);\n\tconst [ hslH, hslS, hslL ] = hsv2hsl(hsvH, hsvS, hsvV);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/**\n* @func hsl2hwb\n* @desc Return an HWB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayHWB}\n* @example\n* hsl2hwb(0, 0, 100) // => [0, 0, 0]\n*/\n\nfunction hsl2hwb(hslH, hslS, hslL) {\n\tconst [ , hsvS, hsvV ] = hsl2hsv(hslH, hslS, hslL);\n\tconst [ , hwbW, hwbB ] = hsv2hwb(hslH, hsvS, hsvV);\n\n\treturn [ hslH, hwbW, hwbB ];\n}\n\n/* Convert between HSL and Lab\n/* ========================================================================== */\n\n/**\n* @func hsl2lab\n* @desc Return a CIE LAB color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsl2lab(0, 100, 50) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsl2lab(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsl\n* @desc Return a HSL color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @param {Number=} f - Hue Fallback (0 - 360)\n* @return {ArrayHSL}\n* @example\n* lab2hsl(54.29, 80.82, 69.88) // => [0, 100, 50]\n*/\n\nfunction lab2hsl(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and LCH\n/* ========================================================================== */\n\n/**\n* @func hsl2lch\n* @desc Return a CIE LCH color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsl2lch(0, 100, 50) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsl2lch(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsl\n* @desc Return an HSL from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hsl(54.29, 106.84, 40.85) // => [0, 100, 50]\n*/\n\nfunction lch2hsl(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HSL and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsl2xyz\n* @desc Return an XYZ color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsl2xyz(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsl2xyz(hslH, hslS, hslL) {\n\tconst [ rgbR, rgbG, rgbB ] = hsl2rgb(hslH, hslS, hslL);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsl\n* @desc Return an HSL color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSL}\n* @example\n* xyz2hsl(0, 100, 50) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hsl(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hslH, hslS, hslL ] = rgb2hsl(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hslH, hslS, hslL ];\n}\n\n/* Convert between HWB and Lab\n/* ========================================================================== */\n\n/**\n* @func hwb2lab\n* @desc Return a CIE LAB color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hwb2lab(0, 0, 0) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hwb2lab(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hwb\n* @desc Return an HWB color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHWB}\n* @example\n* lab2hwb(54.29, 80.82, 69.88) // => [0, 0, 0]\n*/\n\nfunction lab2hwb(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and LCH\n/* ========================================================================== */\n\n/**\n* @func hwb2lch\n* @desc Return a CIE LCH color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hwb2lch(0, 0, 0) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hwb2lch(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hwb\n* @desc Return an HWB color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayLCH}\n* @example\n* lch2hwb(54.29, 106.84, 40.85) // => [0, 0, 0]\n*/\n\nfunction lch2hwb(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HWB and XYZ\n/* ========================================================================== */\n\n/**\n* @func hwb2xyz\n* @desc Return an XYZ color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hwb2xyz(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hwb2xyz(hwbH, hwbW, hwbB) {\n\tconst [ rgbR, rgbG, rgbB ] = hwb2rgb(hwbH, hwbW, hwbB);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hwb\n* @desc Return an HWB color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayXYZ}\n* @example\n* xyz2hwb(0, 0, 0) // => [41.25, 21.27, 1.93]\n*/\n\nfunction xyz2hwb(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hwbH, hwbW, hwbB ] = rgb2hwb(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hwbH, hwbW, hwbB ];\n}\n\n/* Convert between HSV and Lab\n/* ========================================================================== */\n\n/**\n* @func hsv2lab\n* @desc Return a CIE LAB color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLAB}\n* @example\n* hsv2lab(0, 100, 100) // => [54.29, 80.82, 69.88]\n*/\n\nfunction hsv2lab(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\n\treturn [ labL, labA, labB ];\n}\n\n/**\n* @func lab2hsv\n* @desc Return an HSV color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {ArrayHSV}\n* @example\n* lab2hsv(54.29, 80.82, 69.88) // => [0, 100, 100]\n*/\n\nfunction lab2hsv(labL, labA, labB, fallbackhue) {\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and LCH\n/* ========================================================================== */\n\n/**\n* @func hsv2lch\n* @desc Return a CIE LCH color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayLCH}\n* @example\n* hsv2lch(0, 100, 100) // => [54.29, 106.84, 40.85]\n*/\n\nfunction hsv2lch(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2hsv\n* @desc Return an HSV color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayHSV}\n* @example\n* lch2hsv(54.29, 106.84, 40.85) // => [0, 100, 100]\n*/\n\nfunction lch2hsv(lchL, lchC, lchH, fallbackhue) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between HSV and XYZ\n/* ========================================================================== */\n\n/**\n* @func hsv2xyz\n* @desc Return an XYZ color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {ArrayXYZ}\n* @example\n* hsv2xyz(0, 100, 100) // => [41.25, 21.27, 1.93]\n*/\n\nfunction hsv2xyz(hsvH, hsvS, hsvV) {\n\tconst [ rgbR, rgbG, rgbB ] = hsv2rgb(hsvH, hsvS, hsvV);\n\tconst [ xyzX, xyzY, xyzZ ] = rgb2xyz(rgbR, rgbG, rgbB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/**\n* @func xyz2hsv\n* @desc Return an XYZ color from an HSV color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayHSV}\n* @example\n* xyz2hsv(41.25, 21.27, 1.93) // => [0, 100, 100]\n*/\n\nfunction xyz2hsv(xyzX, xyzY, xyzZ, fallbackhue) {\n\tconst [ rgbR, rgbG, rgbB ] = xyz2rgb(xyzX, xyzY, xyzZ);\n\tconst [ hsvH, hsvS, hsvV ] = rgb2hsv(rgbR, rgbG, rgbB, fallbackhue);\n\n\treturn [ hsvH, hsvS, hsvV ];\n}\n\n/* Convert between XYZ and LCH\n/* ========================================================================== */\n\n/**\n* @func xyz2lch\n* @desc Return a CIE LCH color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {ArrayLCH}\n* @example\n* xyz2lch(41.25, 21.27, 1.93) // => [54.29, 106.84, 40.85]\n*/\n\nfunction xyz2lch(xyzX, xyzY, xyzZ) {\n\tconst [ labL, labA, labB ] = xyz2lab(xyzX, xyzY, xyzZ);\n\tconst [ lchL, lchC, lchH ] = lab2lch(labL, labA, labB);\n\n\treturn [ lchL, lchC, lchH ];\n}\n\n/**\n* @func lch2xyz\n* @desc Return an XYZ color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {ArrayXYZ}\n* @example\n* lch2xyz(54.29, 106.84, 40.85) // => [41.25, 21.27, 1.93]\n*/\n\nfunction lch2xyz(lchL, lchC, lchH) {\n\tconst [ labL, labA, labB ] = lch2lab(lchL, lchC, lchH);\n\tconst [ xyzX, xyzY, xyzZ ] = lab2xyz(labL, labA, labB);\n\n\treturn [ xyzX, xyzY, xyzZ ];\n}\n\n/* Hex input conversions\n/* ========================================================================== */\n\n/**\n* @func hex2hsl\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSL}\n* @example\n* hex2hsl(\"#f00\") // => [0, 100, 50]\n*/\n\nfunction hex2hsl(hex) {\n\treturn rgb2hsl(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hsv\n* @desc Return an HSL color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHSV}\n* @example\n* hex2hsv(\"#f00\") // => [0, 100, 100]\n*/\n\nfunction hex2hsv(hex) {\n\treturn rgb2hsv(...hex2rgb(hex));\n}\n\n/**\n* @func hex2hwb\n* @desc Return an HWB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayHWB}\n* @example\n* hex2hwb(\"#f00\") // => [0, 0, 0]\n*/\n\nfunction hex2hwb(hex) {\n\treturn rgb2hwb(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lab\n* @desc Return a CIE LAB color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLAB}\n* @example\n* hex2lab(\"#f00\") // => [54.29, 80.82, 69.88]\n*/\n\nfunction hex2lab(hex) {\n\treturn rgb2lab(...hex2rgb(hex));\n}\n\n/**\n* @func hex2lch\n* @desc Return a CIE LCH color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayLCH}\n* @example\n* hex2lch(\"#f00\") // => [54.29, 106.84, 40.85]\n*/\n\nfunction hex2lch(hex) {\n\treturn rgb2lch(...hex2rgb(hex));\n}\n\n/**\n* @func hex2xyz\n* @desc Return an XYZ color from a Hex color\n* @param {StringHex} hex\n* @return {ArrayXYZ}\n* @example\n* hex2xyz(\"#f00\") // => [41.25, 21.27, 1.93]\n*/\n\nfunction hex2xyz(hex) {\n\treturn rgb2xyz(...hex2rgb(hex));\n}\n\n/* Hex output conversions\n/* ========================================================================== */\n\n/**\n* @func hsl2hex\n* @desc Return a Hex color from an HSL color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} l - Lightness (0 - 100)\n* @return {StringHex}\n* @example\n* hsl2hex(0, 100, 50) // => \"#f00\"\n*/\n\nfunction hsl2hex(hslH, hslS, hslL) {\n\treturn rgb2hex(...hsl2rgb(hslH, hslS, hslL));\n}\n\n/**\n* @func hsv2hex\n* @desc Return a Hex color from an HSV color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} s - Saturation (0 - 100)\n* @param {Number} v - Value (0 - 100)\n* @return {StringHex}\n* @example\n* hsv2hex(0, 100, 100) // => \"#f00\"\n*/\n\nfunction hsv2hex(hsvH, hsvS, hsvV) {\n\treturn rgb2hex(...hsl2rgb(hsvH, hsvS, hsvV));\n}\n\n/**\n* @func hwb2hex\n* @desc Return a Hex color from an HWB color\n* @param {Number} h - Hue Angle (0 - 360)\n* @param {Number} w - Whiteness (0 - 100)\n* @param {Number} b - Blackness (0 - 100)\n* @return {StringHex}\n* @example\n* hwb2hex(0, 0, 0) // => \"#f00\"\n*/\n\nfunction hwb2hex(hwbH, hwbW, hwbB) {\n\treturn rgb2hex(...hwb2rgb(hwbH, hwbW, hwbB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LAB color\n* @param {Number} l - CIE Lightness\n* @param {Number} a - Red/Green Coordinate\n* @param {Number} b - Yellow/Blue Coordinate\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 80.82, 69.88) // => \"#f00\"\n*/\n\nfunction lab2hex(labL, labA, labB) {\n\treturn rgb2hex(...lab2rgb(labL, labA, labB));\n}\n\n/**\n* @func lch2hex\n* @desc Return a Hex color from a CIE LCH color\n* @param {Number} l - CIE Lightness\n* @param {Number} c - CIE Chroma\n* @param {Number} h - CIE Hue Angle\n* @return {StringHex}\n* @example\n* lch2hex(54.29, 106.84, 40.85) // => \"#f00\"\n*/\n\nfunction lch2hex(lchL, lchC, lchH) {\n\treturn rgb2hex(...lch2rgb(lchL, lchC, lchH));\n}\n\n/**\n* @func xyz2hex\n* @desc Return a Hex color from an XYZ color\n* @param {Number} x - Chromaticity of X\n* @param {Number} y - Chromaticity of Y\n* @param {Number} z - Chromaticity of Z\n* @return {StringHex}\n* @example\n* xyz2hex(41.25, 21.27, 1.93) // => \"#f00\"\n*/\n\nfunction xyz2hex(xyzX, xyzY, xyzZ) {\n\treturn rgb2hex(...xyz2rgb(xyzX, xyzY, xyzZ));\n}\n\n/* CIEDE conversions\n/* ========================================================================== */\n\n/**\n* @func hex2ciede\n* @desc Return the CIEDE2000 difference between 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberCIEDE}\n* @example\n* hex2ciede('#fff', '#000') // => 100\n*/\n\nfunction hex2ciede(hex1, hex2) {\n\treturn lab2ciede(hex2lab(hex1), hex2lab(hex2));\n}\n\n/**\n* @func hsl2ciede\n* @desc Return the CIEDE2000 difference between 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberCIEDE}\n* @example\n* hsl2ciede([0, 0, 100], [0, 0, 0]) // => 100\n*/\n\nfunction hsl2ciede(hsl1, hsl2) {\n\treturn lab2ciede(hsl2lab(...hsl1), hsl2lab(...hsl2));\n}\n\n/**\n* @func hsv2ciede\n* @desc Return the CIEDE2000 difference between 2 HSV colors\n* @param {ArrayHSV} hsl1\n* @param {ArrayHSV} hsl2\n* @return {NumberCIEDE}.\n* @example\n* hsv2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hsv2ciede(hsv1, hsv2) {\n\treturn lab2ciede(hsv2lab(...hsv1), hsv2lab(...hsv2));\n}\n\n/**\n* @func hwb2ciede\n* @desc Return the CIEDE2000 difference between 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberCIEDE}.\n* @example\n* hwb2ciede([0, 0, 40], [0, 0, 0]) // => 100\n*/\n\nfunction hwb2ciede(hwb1, hwb2) {\n\treturn lab2ciede(hwb2lab(...hwb1), hwb2lab(...hwb2));\n}\n\n/**\n* @func keyword2ciede\n* @desc Return the CIEDE2000 difference between 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberCIEDE}.\n* @example\n* keyword2ciede('white', 'black') // => 100\n*/\n\nfunction keyword2ciede(keyword1, keyword2) {\n\treturn lab2ciede(keyword2lab(keyword1), keyword2lab(keyword2));\n}\n\n/**\n* @func lch2ciede\n* @desc Return the CIEDE2000 difference between 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberCIEDE}.\n* @example\n* lch2ciede([100, 0.03, -82.2], [0, 0, 0]) // => 100\n*/\n\nfunction lch2ciede(lch1, lch2) {\n\treturn lab2ciede(lch2lab(...lch1), lch2lab(...lch2));\n}\n\n/**\n* @func rgb2ciede\n* @desc Return the CIEDE2000 difference between 2 RGB colors\n* @param {ArrayRGB} rgb1\n* @param {ArrayRGB} rgb2\n* @return {NumberCIEDE}.\n* @example\n* rgb2ciede([100, 100, 100], [0, 0, 0]) // => 100\n*/\n\nfunction rgb2ciede(rgb1, rgb2) {\n\treturn lab2ciede(rgb2lab(...rgb1), rgb2lab(...rgb2));\n}\n\n/**\n* @func xyz2ciede\n* @desc Return the CIEDE2000 difference between 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberCIEDE}.\n* @example\n* xyz2ciede([95.05, 100, 108.88], [0, 0, 0]) // => 100\n*/\n\nfunction xyz2ciede(xyz1, xyz2) {\n\treturn lab2ciede(xyz2lab(...xyz1), xyz2lab(...xyz2));\n}\n\n/* Contrast conversions\n/* ========================================================================== */\n\n/**\n* @func hex2contrast\n* @desc Return the contrast ratio of 2 HEX colors\n* @param {StringHex} hex1\n* @param {StringHex} hex2\n* @return {NumberContrast}\n* @example\n* rgb2contrast(\"#fff\", '#000') // => 21\n*/\n\nfunction hex2contrast(hex1, hex2) {\n\treturn rgb2contrast(hex2rgb(hex1), hex2rgb(hex2));\n}\n\n/**\n* @func hsl2contrast\n* @desc Return the contrast ratio of 2 HSL colors\n* @param {ArrayHSL} hsl1\n* @param {ArrayHSL} hsl2\n* @return {NumberContrast}\n* @example\n* hsl2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsl2contrast(hsl1, hsl2) {\n\treturn rgb2contrast(hsl2rgb(...hsl1), hsl2rgb(...hsl2));\n}\n\n/**\n* @func hsv2contrast\n* @desc Return the contrast ratio of 2 HSV colors\n* @param {ArrayHSV} hsv1\n* @param {ArrayHSV} hsv2\n* @return {NumberContrast}\n* @example\n* hsv2contrast([0, 0, 100], [0, 0, 0]) // => 21\n*/\n\nfunction hsv2contrast(hsv1, hsv2) {\n\treturn rgb2contrast(hsv2rgb(...hsv1), hsv2rgb(...hsv2));\n}\n\n/**\n* @func hwb2contrast\n* @desc Return the contrast ratio of 2 HWB colors\n* @param {ArrayHWB} hwb1\n* @param {ArrayHWB} hwb2\n* @return {NumberContrast}\n* @example\n* hwb2contrast([0, 100, 0], [0, 0, 100]) // => 21\n*/\n\nfunction hwb2contrast(hwb1, hwb2) {\n\treturn rgb2contrast(hwb2rgb(...hwb1), hwb2rgb(...hwb2));\n}\n\n/**\n* @func keyword2contrast\n* @desc Return the contrast ratio of 2 keyword colors\n* @param {StringKeyword} keyword1\n* @param {StringKeyword} keyword2\n* @return {NumberContrast}\n* @example\n* keyword2contrast('white', 'black') // => 21\n*/\n\nfunction keyword2contrast(keyword1, keyword2) {\n\treturn rgb2contrast(keyword2rgb(keyword1), keyword2rgb(keyword2));\n}\n\n/**\n* @func lab2contrast\n* @desc Return the contrast ratio of 2 LAB colors\n* @param {ArrayLAB} lab1\n* @param {ArrayLAB} lab2\n* @return {NumberContrast}\n* @example\n* lab2contrast([100, 0.003, -0.025], [0, 0, 0]) // => 21\n*/\n\nfunction lab2contrast(lab1, lab2) {\n\treturn rgb2contrast(lab2rgb(...lab1), lab2rgb(...lab2));\n}\n\n/**\n* @func lch2contrast\n* @desc Return the contrast ratio of 2 LCH colors\n* @param {ArrayLCH} lch1\n* @param {ArrayLCH} lch2\n* @return {NumberContrast}\n* @example\n* lch2contrast([100, 0.025, -82.2], [0, 0, 0]) // => 21\n*/\n\nfunction lch2contrast(lch1, lch2) {\n\treturn rgb2contrast(lch2rgb(...lch1), lch2rgb(...lch2));\n}\n\n/**\n* @func xyz2contrast\n* @desc Return the contrast ratio of 2 XYZ colors\n* @param {ArrayXYZ} xyz1\n* @param {ArrayXYZ} xyz2\n* @return {NumberContrast}\n* @example\n* xyz2contrast([95.05, 100, 108.88], [0, 0, 0]) // => 21\n*/\n\nfunction xyz2contrast(xyz1, xyz2) {\n\treturn rgb2contrast(xyz2rgb(...xyz1), xyz2rgb(...xyz2));\n}\n\n/* Keyword Conversions\n/* ========================================================================== */\n\n/**\n* @func keyword2hex\n* @desc Return an RGB color from a keyword color\n* @param {StringKeyword} keyword - CSS Color Keyword\n* @return {String}\n* @example\n* keyword2hex('white') // => \"#ffffff\"\n*/\n\nfunction keyword2hex(keyword) {\n\treturn rgb2hex(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsl\n* @desc Return an HSL color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSL}\n* @example\n* keyword2hsl('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsl(keyword) {\n\treturn rgb2hsl(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hsv\n* @desc Return an HSV color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHSV}\n* @example\n* keyword2hsv('white') // => [0, 0, 100]\n*/\n\nfunction keyword2hsv(keyword) {\n\treturn rgb2hsv(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2hwb\n* @desc Return an HWB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayHWB}\n* @example\n* keyword2hwb('red') // => [0, 0, 0]\n*/\n\nfunction keyword2hwb(keyword) {\n\treturn rgb2hwb(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lab\n* @desc Return a CIE LAB color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLAB}\n* @example\n* keyword2lab('red') // => [54.29, 80.82, 69.88]\n*/\n\nfunction keyword2lab(keyword) {\n\treturn rgb2lab(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return a CIE LCH color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayLCH}\n* @example\n* keyword2lch('red') // => [54.29, 106.84, 40.85]\n*/\n\nfunction keyword2lch(keyword) {\n\treturn rgb2lch(...keyword2rgb(keyword));\n}\n\n/**\n* @func keyword2lch\n* @desc Return an XYZ color from a keyword color\n* @param {StringKeyword}\n* @return {ArrayXYZ}\n* @example\n* keyword2lch('red') // => [41.25, 21.27, 1.93]\n*/\n\nfunction keyword2xyz(keyword) {\n\treturn rgb2xyz(...keyword2rgb(keyword));\n}\n\n/* All Conversions\n/* ========================================================================== */\n\nexport {\n\thex2ciede,\n\thex2contrast,\n\thex2hsl,\n\thex2hsv,\n\thex2hwb,\n\thex2lab,\n\thex2lch,\n\thex2rgb,\n\thex2xyz,\n\n\thsl2ciede,\n\thsl2contrast,\n\thsl2hex,\n\thsl2hsv,\n\thsl2hwb,\n\thsl2lab,\n\thsl2lch,\n\thsl2rgb,\n\thsl2xyz,\n\n\thsv2ciede,\n\thsv2contrast,\n\thsv2hex,\n\thsv2hsl,\n\thsv2hwb,\n\thsv2lab,\n\thsv2lch,\n\thsv2rgb,\n\thsv2xyz,\n\n\thwb2ciede,\n\thwb2contrast,\n\thwb2hex,\n\thwb2hsl,\n\thwb2hsv,\n\thwb2lab,\n\thwb2lch,\n\thwb2rgb,\n\thwb2xyz,\n\n\tkeyword2ciede,\n\tkeyword2contrast,\n\tkeyword2hex,\n\tkeyword2hsl,\n\tkeyword2hsv,\n\tkeyword2hwb,\n\tkeyword2lab,\n\tkeyword2lch,\n\tkeyword2rgb,\n\tkeyword2xyz,\n\n\tlab2ciede,\n\tlab2contrast,\n\tlab2hex,\n\tlab2hsl,\n\tlab2hsv,\n\tlab2hwb,\n\tlab2lch,\n\tlab2rgb,\n\tlab2xyz,\n\n\tlch2ciede,\n\tlch2contrast,\n\tlch2hex,\n\tlch2hsl,\n\tlch2hsv,\n\tlch2hwb,\n\tlch2lab,\n\tlch2rgb,\n\tlch2xyz,\n\n\trgb2ciede,\n\trgb2contrast,\n\trgb2hex,\n\trgb2hsl,\n\trgb2hsv,\n\trgb2hwb,\n\trgb2lab,\n\trgb2lch,\n\trgb2xyz,\n\n\txyz2ciede,\n\txyz2contrast,\n\txyz2hex,\n\txyz2hsl,\n\txyz2hsv,\n\txyz2hwb,\n\txyz2lab,\n\txyz2lch,\n\txyz2rgb\n};\n\n/**\n* @typedef {Array} ArrayRGB\n* An array of red, green, and blue channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n*\n*/\n/**\n* @typedef {Array} ArrayRGBA\n* An array of red, green, blue, and alpha channels.\n* @property {Number} 0 - Red (0 - 100)\n* @property {Number} 1 - Green (0 - 100)\n* @property {Number} 2 - Blue (0 - 100)\n* @property {Number} 3 - Alpha (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSL\n* An array of hue, saturation, and lightness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Lightness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayHSV\n* An array of hue, saturation, and value channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Saturation (0 - 100)\n* @property {Number} 2 - Value (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayLAB\n* An array of CIELAB lightness, red/green, and yellow/blue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - Red/Green Coordinate\n* @property {Number} 2 - Yellow/Blue Coordinate\n*/\n/**\n* @typedef {Array} ArrayLCH\n* An array of CIELAB lightness, chroma, and hue.\n* @property {Number} 0 - CIE Lightness\n* @property {Number} 1 - CIE Chroma\n* @property {Number} 2 - CIE Hue\n*/\n/**\n* @typedef {Array} ArrayHWB\n* An array of hue, whiteness, and blackness channels.\n* @property {Number} 0 - Hue Angle (0 - 360)\n* @property {Number} 1 - Whiteness (0 - 100)\n* @property {Number} 2 - Blackness (0 - 100)\n*/\n/**\n* @typedef {Array} ArrayXYZ\n* An array of CIELAB chromacity.\n* @property {Number} 0 - X Chromacity\n* @property {Number} 1 - Y Chromacity\n* @property {Number} 2 - Z Chromacity\n* @example\n* [95.05, 100, 108.88]\n* @example\n* [0, 0, 0]\n*/\n/**\n* @typedef {String} StringHex\n* A string representing the 3, 4, 6, or 8 digit hexidecimal color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {String} StringKeyword\n* A case-insensitive string identifier that represents a specific color.\n* @example\n* \"#f00\"\n* \"#f00f\"\n* @example\n* \"#ff0000\"\n* \"#ff0000ff\"\n*/\n/**\n* @typedef {Number} NumberContrast\n* A contrast ratio of the colors (0 - 21)\n* @example\n* 0\n* @example\n* 21\n*/\n/**\n* @typedef {Number} NumberCIEDE\n* A CIEDE2000 difference between 2 colors (0 - 100)\n* @example\n* 0\n* @example\n* 100\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}